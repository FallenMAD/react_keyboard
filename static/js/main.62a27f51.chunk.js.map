{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyPressed","handleKeyUp","e","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAdlC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SAEIT,EACI,mBAAGS,UAAU,eAAb,4CAAyDT,EAAzD,OACA,mBAAGS,UAAU,eAAb,2CAzBd,GAAyBC,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.62a27f51.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  keyPressed: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    keyPressed: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this.setState({ keyPressed: e.key });\n  };\n\n  render() {\n    const { keyPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        {\n          keyPressed\n            ? <p className=\"App__message\">{`The last pressed key is [${keyPressed}]`}</p>\n            : <p className=\"App__message\">Nothing was pressed yet</p>\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}